using System;
using System.Linq;

namespace Clusterizer
{
    /// <summary>
    /// Static class for app wide used settings, methods and data
    /// </summary>
    internal static class Tools
    {
        #region User-Defined Data
        /// <summary>
        /// The string data headings
        /// </summary>
        public static string[] StringDataHeadings =
        {
            "Название вуза",
            "Округ",
            "Субъект РФ",
            "Город",
            "Ведомственная принадлежность",
            "Профиль организации"
        };

        /// <summary>
        /// The numeric data headings
        /// </summary>
        public static string[] NumericDataHeadings =
        {
            "Средний балл ЕГЭ студентов, принятых на обучение по очной форме за счет средств соответствующих бюджетов бюджетной системы РФ",
            "Средний балл ЕГЭ студентов, принятых на обучение по очной форме за счет средств соответствующих бюджетов бюджетной системы РФ, за исключением лиц, поступивших с учетом особых прав и в рамках квоты целевого приема",
            "Средний балл ЕГЭ студентов, принятых на обучение по очной форме с оплатой стоимости затрат на обучение физическими и юридическими лицами",
            "Усредненный по направлениям минимальный балл ЕГЭ студентов, принятых на обучение по очной форме на программы бакалавриата и специалитета",
            "Численность студентов, победителей и призеров заключительного этапа всероссийской олимпиады школьников, членов сборных команд Российской Федерации, участвовавших в международных олимпиадах по общеобразовательным предметам по специальностям, без вступительных испытаний",
            "Численность студентов, победителей и призеров олимпиад школьников, принятых на очную форму  по специальностям и (или) направлениям подготовки, соответствующим профилю олимпиады школьников, без вступительных испытаний",
            "Численность студентов, принятых по результатам целевого приема на первый курс на очную форму обучения",
            "Удельный вес численности студентов, принятых по результатам целевого приема на первый курс на очную форму обучения по программам бакалавриата и специалитета в общей численности студентов, принятых на первый курс по программам бакалавриата и специалитета н",
            "Удельный вес численности студентов (приведенного контингента), обучающихся по программам магистратуры, в общей численности приведенного контингента обучающихся по образовательным программам бакалавриата, специалитета и магистратуры",
            "Удельный вес численности обучающихся (приведенного контингента), по программам магистратуры, подготовки научно-педагогических кадров в аспирантуре (адъюнктуре), ординатуры, интернатуры, ассистентуры-стажировки в общей численности приведенного контингента",
            "Удельный вес численности студентов, имеющих диплом бакалавра, специалиста или магистра других организаций, принятых на первый курс на обучение по программам магистратуры образовательной организации, в общей численности студентов, принятых на первый курс",
            "Удельный вес численности обучающихся по программам магистратуры, подготовки научно-педагогических кадров в аспирантуре (адъюнктуре), ординатуры, ассистентуры-стажировки, имеющих диплом бакалавра, диплом специалиста или диплом магистра",
            "Численность аспирантов (адъюнктов), ординаторов, интернов, ассистентов-стажеров образовательной организации в расчете на 100 студентов (приведенного контингента)",
            "Удельный вес численности слушателей из сторонних организаций в общей численности слушателей, прошедших обучение в образовательной организации по программам повышения квалификации или профессиональной переподготовки",
            "Удельный вес численности студентов, обучающихся по направлениям подготовки бакалавриата, специалитета, и магистратуры по областям знаний «Инженерное дело, технологии и технические науки», «Здравоохранение и медицинские науки», «Образование и педагогически",
            "Количество цитирований публикаций, изданных за последние 5 лет, индексируемых в информационно-аналитической системе научного цитирования Web of Science в расчете на 100 НПР",
            "Количество цитирований публикаций, изданных за последние 5 лет, индексируемых в информационно-аналитической системе научного цитирования Scopus в расчете на 100 НПР",
            "Количество цитирований публикаций, изданных за последние 5 лет, индексируемых в Российском индексе научного цитирования (далее – РИНЦ) в расчете на 100 НПР",
            "Число публикаций организации, индексируемых в информационно-аналитической системе научного цитирования Web of Science, в расчете на 100 НПР",
            "Число публикаций организации, индексируемых в информационно-аналитической системе научного цитирования Scopus, в расчете на 100 НПР",
            "Число публикаций организации, индексируемых в информационно-аналитической системе научного цитирования РИНЦ, в расчете на 100 НПР",
            "Общий объем научно-исследовательских и опытно-конструкторских работ (далее – НИОКР)",
            "Удельный вес доходов от НИОКР в общих доходах образовательной организации",
            "Удельный вес НИОКР, выполненных собственными силами (без привлечения соисполнителей), в общих доходах образовательной организации от НИОКР",
            "Доходы от НИОКР (за исключением средств бюджетов бюджетной системы Российской Федерации, государственных фондов поддержки науки) в расчете на одного НПР",
            "Количество лицензионных соглашений",
            "Удельный вес средств, полученных образовательной организацией от использования результатов интеллектуальной деятельности, в общих доходах образовательной организации",
            "Удельный вес численности НПР без ученой степени – до 30 лет, кандидатов наук – до 35 лет, докторов наук – до 40 лет, в общей численности НПР",
            "Удельный вес научно-педагогических работников, защитивших кандидатские и докторские диссертации за отчетный период в общей численности НПР",
            "Количество научных журналов, в том числе электронных, издаваемых образовательной организацией",
            "Количество полученных грантов за отчетный год в расчете на 100 НПР",
            "Удельный вес численности иностранных студентов (кроме СНГ), обучающихся программам бакалавриата, специалитета, магистратуры, в общей численности студентов (приведенный контингент)",
            "Удельный вес численности иностранных студентов из СНГ, обучающихся по программам бакалавриата, специалитета, магистратуры, в общей численности студентов (приведенный контингент)",
            "Удельный вес численности иностранных студентов, завершивших освоение образовательных программ бакалавриата, специалитета, магистратуры, в общей численности студентов (приведенный контингент)",
            "Удельный вес численности иностранных студентов (кроме стран СНГ), завершивших освоение образовательных программ бакалавриата, программ специалитета, программ магистратуры, в общей численности студентов (приведенный контингент)",
            "Удельный вес численности иностранных студентов из стран СНГ, завершивших освоение образовательных программ бакалавриата, программ специалитета, программ магистратуры, в общей численности студентов (приведенный контингент)",
            "Удельный вес численности студентов, обучающихся по очной форме обучения по образовательным программам бакалавриата, программам специалитета, программам магистратуры, прошедших обучение за рубежом не менее семестра (триместра), в общей численности студенто",
            "Численность студентов иностранных образовательных организаций, прошедших обучение в образовательной организации по образовательным по очной форме обучения по образовательным программам бакалавриата, программам специалитета, программам магистратуры, не не менее семестра (триместра)",
            "Удельный вес численности иностранных граждан из числа НПР в общей численности НПР",
            "Численность зарубежных ведущих профессоров, преподавателей и исследователей, работающих в образовательной организации не менее 1 семестра",
            "Удельный вес численности иностранных граждан (кроме стран СНГ) из числа аспирантов (адъюнктов), ординаторов, интернов, ассистентов-стажеров образовательной организации в общей численности аспирантов (адъюнктов), ординаторов, интернов, ассистентов-стажеров",
            "Удельный вес численности иностранных граждан из стран СНГ из числа аспирантов (адъюнктов), ординаторов, интернов, ассистентов-стажеров образовательной организации в общей численности аспирантов (адъюнктов), ординаторов, интернов, ассистентов-стажеров",
            "Объем средств, полученных образовательной организацией от выполнения НИОКР от иностранных граждан и иностранных юридических лиц",
            "Объем средств от образовательной деятельности, полученных образовательной организацией от иностранных граждан и иностранных юридических лиц",
            "Доходы образовательной организации из средств от приносящей доход деятельности в расчете на одного НПР",
            "Доля доходов из средств от приносящей доход деятельности в доходах по всем видам финансового обеспечения (деятельности) образовательной организации",
            "Отношение средней заработной платы НПР в образовательной организации (из всех источников) к средней заработной плате по экономике региона",
            "Доходы образовательной организации из всех источников в расчете на численность студентов (приведенный контингент)",
            "Общая площадь учебно-лабораторных помещений в расчете на одного студента (приведенного контингента)",
            "Площадь учебно-лабораторных помещений в расчете на одного студента (приведенного контингента) имеющихся на праве собственности",
            "Площадь учебно-лабораторных помещений в расчете на одного студента (приведенного контингента) имеющихся на праве собственности закрепленных на праве оперативного управления",
            "Площадь учебно-лабораторных помещений в расчете на одного студента (приведенного контингента) имеющихся на праве собственности предоставленных в безвозмездное пользование",
            "Площадь учебно-лабораторных помещений в расчете на одного студента (приведенного контингента) имеющихся на праве собственности предоставленных в аренду",
            "Количество персональных компьютеров в расчете на одного студента (приведенного контингента)",
            "Удельный вес стоимости машин и оборудования (не старше 5 лет) в общей стоимости машин и оборудования",
            "Количество экземпляров печатных учебных изданий (включая учебники и учебные пособия) из общего количества единиц хранения библиотечного фонда, состоящих на учете, в расчете на одного студента (приведенного контингента)",
            "Удельный вес выпускников, трудоустроившихся в течение календарного года, следующего за годом выпуска, в общей численности выпускников образовательной организации обучавшихся по основным образовательным программам высшего образования",
            "Удельный вес НПР, имеющих ученую степень кандидата наук, в общей численности НПР",
            "Удельный вес НПР имеющих ученую степень доктора наук, в общей численности НПР",
            "Удельный вес НПР, имеющих ученую степень кандидата и доктора наук, в общей численности НПР образовательной организации (без совместителей и работающих по договорам гражданско-правового характера)",
            "Число НПР, имеющих ученую степень кандидата и доктора наук, в расчете на 100 студентов",
            "Доля штатных работников ППС в общей численности ППС"
        };

        /// <summary>
        /// The group names
        /// </summary>
        public static string[] GroupNames =
        {
            "Образовательная деятельность",
            "Научно-исследовательская деятельность",
            "Международная деятельность",
            "Финансово-экономическая деятельность",
            "Инфраструктура",
            "Трудоустройство",
            "Кадровый состав"
        };

        /// <summary>
        /// The group items count
        /// </summary>
        public static int[] GroupItemsCount =
        {
            15,
            16,
            13,
            4,
            8,
            1,
            5
        };
        #endregion

        #region App Data        
        /// <summary>
        /// The group items names
        /// </summary>
        public static string[][] GroupItemsNames;

        /// <summary>
        /// The group items indexes
        /// </summary>
        public static int[][] GroupItemsIndexes;

        /// <summary>
        /// The is chosen
        /// </summary>
        public static bool[] isChosen;

        /// <summary>
        /// The data
        /// </summary>
        public static CSVData Data;

        /// <summary>
        /// The clusters
        /// </summary>
        public static ClusterSet Clusters;
        #endregion

        #region Constructor
        static Tools()
        {
            // Generates group Items
            var groupCount = GroupNames.Length;
            GroupItemsNames = new string[groupCount][];
            GroupItemsIndexes = new int[groupCount][];

            var ind = 0;
            for (var i = 0; i < groupCount; i++)
            {
                var count = GroupItemsCount[i];
                GroupItemsNames[i] = new string[count];
                GroupItemsIndexes[i] = new int[count];
                for (var j = 0; j < count; j++)
                {
                    GroupItemsIndexes[i][j] = ind;
                    GroupItemsNames[i][j] = NumericDataHeadings[ind];
                    ind++;
                }
            }
        }
        #endregion

        #region Methods        
        /// <summary>
        /// Minimums-maximum normalization.
        /// </summary>
        /// <param name="arr">The arr.</param>
        public static void MinMaxNormalize(ref double[] arr)
        {
            var max = arr.Max();
            var min = arr.Min();

            for (var i = 0; i < arr.Length; i++)
                arr[i] = (arr[i] - min) / (max - min);
        }

        /// <summary>
        /// Z-Score normalization.
        /// </summary>
        /// <param name="arr">The arr.</param>
        public static void ZScoreNormalize(ref double[] arr)
        {
            var mean = arr.Sum() / arr.Length;
            double bigSum = 0;
            foreach (var d in arr) bigSum += Math.Pow(d - mean, 2);

            var standartDeviation = Math.Sqrt(bigSum / (arr.Length - 1));

            for (var i = 0; i < arr.Length; i++)
                arr[i] = (arr[i] - mean) / standartDeviation;
        }

        /// <summary>
        /// Gets the standart deviation.
        /// </summary>
        /// <param name="points">The points.</param>
        /// <returns>Standart deviation of given points</returns>
        public static double GetStandartDeviation(double[] points)
        {
            var max = points.Max();
            var min = points.Min();
            var avg = (max + min) / 2;
            double sum = 0;
            foreach (var point in points) sum += Math.Pow(point - avg, 2);

            return Math.Sqrt(sum / (points.Length - 1));
        }

        /// <summary>
        /// Groups sequence of points to three subsequences using minimal difference in standart deviation
        /// </summary>
        /// <param name="points">The points.</param>
        /// <returns>Grouped indexes</returns>
        public static int[] GroupBy(double[] points)
        {
            // group indexes
            var groupIds = new int[points.Length];
            var newPoints = points;
            MinMaxNormalize(ref newPoints);

            var min = double.MaxValue;
            int mi = 1, mj = newPoints.Length - 2;

            // custom cases
            if (points.Length == 1)
            {
                groupIds[0] = 1;
            }
            else if (points.Length == 2)
            {
                groupIds[0] = 1;
                groupIds[1] = 2;
            }
            else if (points.Length == 3)
            {
                groupIds[0] = 1;
                groupIds[1] = 2;
                groupIds[2] = 3;
            }
            else
            {
                // overall case
                for (var i = 1; i < newPoints.Length - 2; i++)
                    for (var j = i + 1; j < newPoints.Length - 1; j++)
                    {
                        // get all posible three subsequences
                        var one = newPoints.Slice(0, i);
                        var two = newPoints.Slice(i, j);
                        var three = newPoints.Slice(j, newPoints.Length);

                        // compute sum of standart deviations
                        var avg = GetStandartDeviation(one) + GetStandartDeviation(two) + GetStandartDeviation(three);
                        // get minimum one
                        if (avg < min)
                        {
                            min = avg;
                            mi = i;
                            mj = j;
                        }
                    }

                // setting group ids
                for (var i = 0; i < newPoints.Length; i++)
                    if (i < mi)
                        groupIds[i] = 1;
                    else if (i >= mi && i < mj)
                        groupIds[i] = 2;
                    else
                        groupIds[i] = 3;
            }

            return groupIds;
        }

        /// <summary>
        /// Slices array from the specified index to other index.
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="arr">The arr.</param>
        /// <param name="indexFrom">The index from.</param>
        /// <param name="indexTo">The index to.</param>
        /// <returns>Sliced array</returns>
        public static T[] Slice<T>(this T[] arr, int indexFrom, int indexTo)
        {
            var length = indexTo - indexFrom;
            var result = new T[length];
            Array.Copy(arr, indexFrom, result, 0, length);

            return result;
        }
        #endregion

    }
}